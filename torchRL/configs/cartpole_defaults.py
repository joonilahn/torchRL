from yacs.config import CfgNode as CN

_C = CN()
_C.USE_GPU = False

_C.NET = CN()
_C.NET.NAME = "ActionValueMLP"
_C.NET.NUM_LAYERS =2
_C.NET.HIDDEN_DIM = 128
_C.NET.ACTION_DIM = 2
_C.NET.STATE_DIM = 4

_C.ENV = CN()
_C.ENV.NAME = "CartPole-v1"
_C.ENV.TYPE = "ClassicControl"
_C.ENV.MAX_EPISODE_STEPS = 500
_C.ENV.REWARD_SCALE = 0.01

_C.TRAIN = CN()
_C.TRAIN.TRAINER = ""
_C.TRAIN.NUM_EPISODES = 10000
_C.TRAIN.TRAIN_BY_EPISODE = True  # if False, train will be based on global iteration number
_C.TRAIN.BATCH_SIZE = 32
_C.TRAIN.START_TRAIN = 0
_C.TRAIN.TRAIN_INTERVAL = 10
_C.TRAIN.NUM_ITERS_PER_TRAIN = 50
_C.TRAIN.DISCOUNT_RATE = 0.98
_C.TRAIN.VERBOSE_INTERVAL = 10
_C.TRAIN.TARGET_SYNC_INTERVAL = 100
_C.TRAIN.HISTORY_SIZE = 100
_C.TRAIN.AVG_REWARDS_TO_TERMINATE = 400
_C.TRAIN.PRETRAINED = ""

# For algorithms using epsilon greedy exploration
_C.SCHEDULER = CN()
_C.SCHEDULER.TYPE = "LinearAnnealingScheduler"
_C.SCHEDULER.EPSILON_GREEDY_MINMAX = (0.01, 0.08)
_C.SCHEDULER.DECAY_PERIOD = (0, 2000)

_C.OPTIMIZER = CN()
_C.OPTIMIZER.TYPE = "Adam"
_C.OPTIMIZER.CLIP_GRAD = False
_C.OPTIMIZER.CLIP_GRAD_VALUE = 1.0
_C.OPTIMIZER.ARGS = CN(new_allowed=True)
_C.OPTIMIZER.ARGS.lr =  0.0003

_C.LOSS_FN = CN()
_C.LOSS_FN.TYPE = "MSELoss"
_C.LOSS_FN.ARGS = CN(new_allowed=True)

_C.DATASET = CN()
_C.DATASET.USE_GPU = _C.USE_GPU
_C.DATASET.TYPE = "BufferDataset"
_C.DATASET.BUFFER_SIZE = 50000
_C.DATASET.PIPELINES = []

_C.LOGGER = CN()
_C.LOGGER.OUTPUT_DIR = "./work_dir"
_C.LOGGER.LOG_NAME = "cartpole"
_C.LOGGER.LOG_FILE = True
_C.LOGGER.LOG_TENSORBOARD = True
_C.LOGGER.SAVE_MODEL = True
_C.LOGGER.SAVE_MODEL_INTERVAL = 10000


def get_cfg_defaults():
    return _C.clone()
