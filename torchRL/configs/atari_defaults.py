from yacs.config import CfgNode as CN

_C = CN()
_C.USE_GPU = False

_C.NET = CN()
_C.NET.NAME = "DQN"
_C.NET.HIDDEN_DIM = 512
_C.NET.ACTION_DIM = 4

_C.ENV = CN()
_C.ENV.NAME = ""
_C.ENV.TYPE = "Atari"
_C.ENV.MAX_EPISODE_STEPS = 10000
_C.ENV.REWARD_SCALE = 1.0

_C.TRAIN = CN()
_C.TRAIN.TRAINER = ""
_C.TRAIN.NUM_EPISODES = 2000000
_C.TRAIN.TRAIN_BY_EPISODE = False  # if False, train will be based on global iteration number
_C.TRAIN.BATCH_SIZE = 32
_C.TRAIN.START_TRAIN = 50000
_C.TRAIN.TRAIN_INTERVAL = 1
_C.TRAIN.NUM_ITERS_PER_TRAIN = 1
_C.TRAIN.DISCOUNT_RATE = 0.99
_C.TRAIN.VERBOSE_INTERVAL = 10
_C.TRAIN.TARGET_SYNC_INTERVAL = 10000
_C.TRAIN.HISTORY_SIZE = 100
_C.TRAIN.AVG_REWARDS_TO_TERMINATE = 200
_C.TRAIN.PRETRAINED = ""
_C.TRAIN.EVALUATE_INTERVAL = 1000

# For algorithms using epsilon greedy exploration
_C.SCHEDULER = CN()
_C.SCHEDULER.TYPE = "LinearAnnealingScheduler"
_C.SCHEDULER.EPSILON_GREEDY_MINMAX = (0.1, 1.0)
_C.SCHEDULER.DECAY_PERIOD = (50000, 1000000)

_C.OPTIMIZER = CN()
_C.OPTIMIZER.TYPE = "Adam"
_C.OPTIMIZER.CLIP_GRAD = False
_C.OPTIMIZER.CLIP_GRAD_VALUE = 1.0
_C.OPTIMIZER.ARGS = CN(new_allowed=True)
_C.OPTIMIZER.ARGS.lr = 0.0001

_C.LOSS_FN = CN()
_C.LOSS_FN.TYPE = "SmoothL1Loss"
_C.LOSS_FN.ARGS = CN(new_allowed=True)

_C.DATASET = CN()
_C.DATASET.TYPE = "BufferFramesDataset"
_C.DATASET.BUFFER_SIZE = 400000
_C.DATASET.PIPELINES = ["TransformAtariInput", "ToTensor", "ToCuda"]

_C.LOGGER = CN()
_C.LOGGER.OUTPUT_DIR = "./work_dir"
_C.LOGGER.LOG_NAME = "atari"
_C.LOGGER.LOG_FILE = True
_C.LOGGER.LOG_TENSORBOARD = True
_C.LOGGER.SAVE_MODEL = True
_C.LOGGER.SAVE_MODEL_INTERVAL = 10000


def get_cfg_defaults():
    return _C.clone()
